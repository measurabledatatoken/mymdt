version: 2
jobs:
  unit-test:
    docker:
      - image: circleci/node:9.11.1-browsers

    working_directory: ~/mdtwallet-webapp

    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run:
          name: Install node modules
          command: npm install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run:
          name: Run unit tests
          command: npm run test:unit

  e2e-test:
    docker:
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm
    working_directory: ~/mdtwallet-webapp
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          key: v1-deps-{{ .Branch }}
          key: v1-deps
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: Run e2e test
          command: npm run test:e2e -- --headless --record --key ${CYPRESS_KEY}

  build-and-publish-images:
    docker:
      - image: circleci/node:9.11.1-browsers

    working_directory: ~/mdtwallet-webapp

    steps:
      - checkout

      - setup_remote_docker:
          version: 17.05.0-ce
          docker_layer_caching: true # paid feature

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.03.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

      - run:
          name: Build and push Docker images
          command: |
            if [ "${CIRCLE_BRANCH}" == "development" ]; then
              make build-dev
              # TODO(GARY): push images to Docker registry
            elif [ "${CIRCLE_BRANCH}" == "alpha" ];
              make build-alpha
              # TODO(GARY): push images to Docker registry
            fi

      # - run:
      #     name: Run containers
      #     command: |
      #       docker network create mdtwallet-api_api # for testing only
      #       make run-dev background=true

      # - run:
      #     name: Verify web app
      #     command: |
      #       set -x
      #       docker run --network container:mdtwallet-webapp_mdtwallet-app_1 \
      #         appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost/

      # - run:
      #     name: Cleanup Docker containers
      #     command: make clean-dev

  deploy-alpha:
    docker:
      - image: circleci/node:9.11.1-browsers
    steps:
      - run:
          name: Deploy to alpha server
          command: |
            ssh -o "StrictHostKeyChecking no" mailtime@mymdt-alpha.measurable.ai "cd mdtwallet-webapp && export CIRCLE_SHA1=$CIRCLE_SHA1 && export CIRCLE_BRANCH=$CIRCLE_BRANCH && sh .circleci/deploy.sh"

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - unit-test:
          filters:
            branches:
              only:
                - development
                - alpha
                - dev/gary/circleci
      - e2e-test:
          filters:
            branches:
              only:
                - development
                - alpha
      # - build-and-publish-images:
      #     requires:
      #       - unit-test
      #     filters:
      #       branches:
      #         only:
      #           - development
      #           - alpha
      #           - dev/gary/circleci
      - deploy-alpha:
          requires:
            - unit-test
            # - e2e-test
          filters:
            branches:
              only: alpha
